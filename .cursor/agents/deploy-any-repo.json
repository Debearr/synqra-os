{
  "name": "üì¶ Deploy Any Repo",
  "description": "Deploy any repo with safeguard + auto-generated start.sh (Node/Python smart detection, Node fallback). Always echoes final Railway URL at the end.",
  "type": "background",
  "script": "#!/usr/bin/env bash\nset -euo pipefail\n\n# Import utils (optional)\nsource ./deploy_utils.sh || true\n\nREPO_NAME=\"$1\"\n\n# Auto-generate start.sh if missing\nif [ ! -f start.sh ]; then\n  echo \"‚ö†Ô∏è No start.sh found in $REPO_NAME. Generating a smart default...\"\n  if [ -f package.json ]; then\n    echo '#!/usr/bin/env bash' > start.sh\n    echo 'npm install' >> start.sh\n    echo 'npm start' >> start.sh\n    echo \"üü¢ Detected Node.js project. Created Node start.sh\"\n  elif [ -f requirements.txt ]; then\n    echo '#!/usr/bin/env bash' > start.sh\n    echo 'pip install -r requirements.txt' >> start.sh\n    echo 'python app.py' >> start.sh\n    echo \"üü° Detected Python project. Created Python start.sh\"\n  else\n    echo '#!/usr/bin/env bash' > start.sh\n    echo 'npm install || true' >> start.sh\n    echo 'npm start || echo \"Fallback start (please edit manually)\"' >> start.sh\n    echo \"üîµ No clear runtime detected. Defaulting to Node.js fallback.\"\n  fi\n  chmod +x start.sh\nfi\n\n# Deploy with Railway\nrailway up --service=\"$REPO_NAME\" | tee deploy_output.log\n\n# Extract URL\nURL=$(grep -o 'https://[^ ]*railway.app' deploy_output.log | tail -n 1 || true)\n\nif [ -n \"$URL\" ]; then\n  echo -e \"\\n\\033[1;33müöÄ FINAL DEPLOY URL for $REPO_NAME: $URL\\033[0m\\n\"\n  log_deploy \"$REPO_NAME\" \"$URL\"\nelse\n  echo -e \"\\n‚ùå No URL found in logs for $REPO_NAME. Check Railway dashboard.\\n\"\nfi\n"
}
