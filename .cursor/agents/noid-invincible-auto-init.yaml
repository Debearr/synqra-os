name: "NØID Invincible Auto-Init Agent"
trigger: "auto-init"
description: "End-to-end, self-healing initializer for all NØID AppFactory projects. Detects, fixes, installs, and logs automatically without human input."
actions:
  - run: |
      echo "🚀 NØID Invincible Workforce initializing..."
      ROOT="/workspace"
      LOG="$ROOT/noid-auto-init.log"
      echo "[$(date)] 🔍 Starting auto-init sequence..." >> "$LOG"

      # Auto-detect known project folders
      for project in Synqra AuraFX NY7 NØID; do
        if [ -f "$ROOT/$project/package.json" ]; then
          cd "$ROOT/$project"
          echo "📦 Project detected: $project" | tee -a "$LOG"
          ACTIVE_PROJECT="$project"
          break
        fi
      done

      if [ -z "$ACTIVE_PROJECT" ]; then
        echo "❌ No recognized project found under $ROOT" | tee -a "$LOG"
        exit 1
      fi

      # Verify Node & NPM availability
      if ! command -v node >/dev/null 2>&1; then
        echo "⚠️ Node not found — installing Node.js (LTS)..." | tee -a "$LOG"
        curl -fsSL https://deb.nodesource.com/setup_lts.x | bash - && apt-get install -y nodejs
      fi

      # Self-healing: generate missing package.json
      if [ ! -f "package.json" ]; then
        echo "🛠️ package.json missing — creating default template..." | tee -a "$LOG"
        cat <<EOT > package.json
        {
          "name": "${ACTIVE_PROJECT,,}",
          "version": "1.0.0",
          "scripts": {
            "dev": "next dev",
            "build": "next build",
            "start": "next start",
            "init-config": "node scripts/init-config.js"
          },
          "dependencies": {
            "next": "^13.5.0",
            "react": "^18.3.1",
            "react-dom": "^18.3.1"
          }
        }
        EOT
      fi

      # Self-healing: generate init-config.js if missing
      if [ ! -f "scripts/init-config.js" ]; then
        echo "🧩 Creating missing init-config.js..." | tee -a "$LOG"
        mkdir -p scripts
        cat <<EOT > scripts/init-config.js
        import fs from "fs";
        console.log("🔧 Initializing configuration for ${ACTIVE_PROJECT}...");
        const env = {
          PROJECT_NAME: "${ACTIVE_PROJECT}",
          INIT_DATE: new Date().toISOString()
        };
        fs.writeFileSync(".env", Object.entries(env).map(([k,v]) => `${k}=${v}`).join("\n"));
        console.log("✅ ${ACTIVE_PROJECT} init complete.");
        EOT
      fi

      # Dependency installation
      echo "📦 Installing dependencies for ${ACTIVE_PROJECT}..." | tee -a "$LOG"
      npm install --silent >> "$LOG" 2>&1 || echo "⚠️ npm install encountered warnings, continuing..." | tee -a "$LOG"

      # Run init-config script if available
      if npm run | grep -q "init-config"; then
        echo "⚙️ Running init-config..." | tee -a "$LOG"
        npm run init-config >> "$LOG" 2>&1 || echo "⚠️ init-config completed with warnings." | tee -a "$LOG"
      else
        echo "⚠️ init-config script not defined — skipping." | tee -a "$LOG"
      fi

      echo "✅ ${ACTIVE_PROJECT} initialization successful!" | tee -a "$LOG"
      echo "[$(date)] ✅ Completed auto-init sequence for ${ACTIVE_PROJECT}" >> "$LOG"
  - notify: "💼 NØID Invincible Workforce: Auto-init complete for active project."
  - notify: "📜 Log saved to /workspace/noid-auto-init.log"